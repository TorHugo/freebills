plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'info.solidsoft.pitest' version '1.7.0'
}

group = 'com.freebills'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveName 'fbills.jar'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.14'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.mailjet:mailjet-client:4.2.0'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true

        xml.destination file("${buildDir}/reports/jacoco.xml")
        html.destination file("${buildDir}/reports/coverage")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/Application**",
            ])
        }))
    }
}

sonarqube {
    properties {
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco.xml'
        property "sonar.projectKey", "warleyvods_freebills"
        property "sonar.organization", "freebills"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

pitest {
    junit5PluginVersion = "0.15"
    jvmArgs = ['-Dspring.test.constructor.autowire.mode=all']
}

test {
    useJUnitPlatform()
    systemProperty 'spring.test.constructor.autowire.mode', 'all'
    systemProperty 'spring.profiles.active', 'test'
}